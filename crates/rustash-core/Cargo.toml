[package]
name = "rustash-core"
version.workspace = true
edition.workspace = true
rust-version.workspace = true
authors.workspace = true
license.workspace = true
repository.workspace = true
description = "Core library for Rustash snippet manager"
keywords.workspace = true
categories.workspace = true

[dependencies]
# Database
diesel = { workspace = true, features = ["chrono", "serde_json", "uuid"] }

# Database migrations with backend-specific features
diesel_migrations = { workspace = true, optional = true }

# Serialization
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }
erased-serde = { workspace = true }

# Async
async-trait = { workspace = true }
tokio = { workspace = true, features = ["rt-multi-thread", "macros"] }

# Time handling
chrono = { workspace = true, features = ["serde"] }

# Error handling
anyhow = { workspace = true }
thiserror = { workspace = true }

# UUID generation
uuid = { workspace = true, features = ["v4", "serde", "v7"] }

# Conditional compilation
cfg-if = "1.0"

# Platform-specific paths
home = "0.5"
hnsw_rs = { version = "0.3", optional = true }

# PostgreSQL backend dependencies
bb8 = { version = "0.8.0", optional = true }
diesel-async = { version = "0.5.0", features = ["postgres", "sqlite", "bb8"], optional = true }

# SQLite backend dependencies
[target.'cfg(feature = "sqlite")'.dependencies]
libsqlite3-sys = { version = "0.30.0", features = ["bundled"], optional = true }

# Vector search (commented out due to build issues)
# sqlite-vss = { workspace = true }

# Vector search (commented out due to build issues)
# sqlite-vss = { workspace = true }

[dev-dependencies]
tempfile = { workspace = true }
proptest = { workspace = true }

[features]
# Default to SQLite for backward compatibility
default = ["sqlite"]

# SQLite backend
sqlite = [
    "diesel/sqlite", 
    "diesel/r2d2",
    "r2d2",
    "libsqlite3-sys",
    "diesel-async/sqlite"
]

# PostgreSQL backend
postgres = [
    "diesel/postgres",
    "bb8",
    "bb8-postgres",
    "tokio-postgres",
    "diesel-async/postgres"
]

# Vector search (experimental)
vector-search = ["hnsw_rs"]

# Database migrations
migrations = ["diesel_migrations"]